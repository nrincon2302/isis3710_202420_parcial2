{
	"info": {
		"_postman_id": "c1239af6-94c5-486c-98db-1c5a634b82fe",
		"name": "Pacientes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25519060",
		"_collection_link": "https://warped-moon-645477.postman.co/workspace/Web-Individual-Workspace~8a499d26-c919-4be2-a3bd-348006f0c5ec/collection/25519060-c1239af6-94c5-486c-98db-1c5a634b82fe?action=share&source=collection_link&creator=25519060"
	},
	"item": [
		{
			"name": "Crear un nuevo paciente 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"id_paciente_1\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Juan Pérez\",\r\n    \"genero\": \"Masculino\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pacientes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pacientes"
					]
				}
			},
			"response": [
				{
					"name": "Crear un nuevo paciente",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Juan Pérez\",\r\n    \"genero\": \"Masculino\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pacientes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pacientes"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"2f8f6e9b-1c59-4b92-9b2c-3f2b2a3d9a01\",\n    \"nombre\": \"Juan Pérez\",\n    \"genero\": \"Masculino\"\n}"
				}
			]
		},
		{
			"name": "Crear un nuevo paciente 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"id_paciente_2\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Ana García\",\r\n    \"genero\": \"Femenino\",\r\n    \"diagnosticos\": [\r\n        {\r\n            \"id\": \"{{id_diagnostico_1}}\",\r\n            \"nombre\": \"Hipertensión\",\r\n            \"descripcion\": \"Hipertension descripción\"\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pacientes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pacientes"
					]
				}
			},
			"response": [
				{
					"name": "Crear un nuevo paciente",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Juan Pérez\",\r\n    \"genero\": \"Masculino\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pacientes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pacientes"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"9fbe8d65-7f94-4721-aaba-d82bbec6b6f3\",\n    \"nombre\": \"Ana García\",\n    \"genero\": \"Femenino\"\n}"
				}
			]
		},
		{
			"name": "Crear un paciente con un nombre de menos de 3 caracteres",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The patient name must be at least 3 characters long\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"J\",\r\n    \"genero\": \"Masculino\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pacientes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pacientes"
					]
				}
			},
			"response": [
				{
					"name": "Crear un paciente con un nombre de menos de 3 caracteres",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"J\",\r\n    \"genero\": \"Masculino\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pacientes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pacientes"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n   \"statusCode\": 412,\r\n   \"message\": \"The patient name must be at least 3 characters long\"\r\n}"
				}
			]
		},
		{
			"name": "Obtener todos los pacientes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of patients > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pacientes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pacientes"
					]
				}
			},
			"response": [
				{
					"name": "Obtener todos los pacientes",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pacientes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pacientes"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "[\r\n  {\r\n    \"id\": \"2f8f6e9b-1c59-4b92-9b2c-3f2b2a3d9a01\",\r\n    \"nombre\": \"Juan Pérez\",\r\n    \"genero\": \"Masculino\",\r\n    \"medicos\": [\r\n        {\r\n            \"id\": {{id_medico_2}}\r\n        }\r\n    ],\r\n    \"diagnosticos\": []\r\n  },\r\n  {\r\n    \"id\": \"9fbe8d65-7f94-4721-aaba-d82bbec6b6f3\",\r\n    \"nombre\": \"Ana García\",\r\n    \"genero\": \"Femenino\",\r\n    \"medicos\": [],\r\n    \"diagnosticos\": [\r\n        {\r\n            \"id\": {{id_diagnostico_1}}\r\n        }\r\n    ]\r\n  }\r\n]"
				}
			]
		},
		{
			"name": "Obtener un paciente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pacientes/{{id_paciente_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pacientes",
						"{{id_paciente_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un paciente",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pacientes/{{id_paciente_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pacientes",
								"{{id_paciente_1}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"id\": \"2f8f6e9b-1c59-4b92-9b2c-3f2b2a3d9a01\",\r\n    \"nombre\": \"Juan Pérez\",\r\n    \"genero\": \"Masculino\",\r\n    \"medicos\": [\r\n        {\r\n            \"id\": {{id_medico_2}}\r\n        }\r\n    ],\r\n    \"diagnosticos\": []\r\n}"
				}
			]
		},
		{
			"name": "Obtener un paciente que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The patient with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pacientes/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pacientes",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un paciente que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pacientes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pacientes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"The patient with the given id was not found\"\r\n}"
				}
			]
		},
		{
			"name": "Borrar un paciente sin diagnósticos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pacientes/{{id_paciente_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pacientes",
						"{{id_paciente_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un paciente sin diagnósticos",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pacientes/{{id_paciente_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pacientes",
								"{{id_paciente_1}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar un paciente que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The patient with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pacientes/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pacientes",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un paciente que no existe",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pacientes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pacientes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The patient with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Borrar un paciente con diagnósticos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The patient cannot be deleted because it has diagnostics associated\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pacientes/{{id_paciente_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pacientes",
						"{{id_paciente_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un paciente con diagnósticos",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pacientes/{{id_paciente_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pacientes",
								"{{id_paciente_2}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n   \"statusCode\": 412,\r\n   \"message\": \"The patient cannot be deleted because it has diagnostics associated\"\r\n}"
				}
			]
		}
	]
}